name: Artifactory Docker CI

env:
  IMAGE_NAME: emiiia/node-web-app

on:
  push:
    branches: [dev, develop, qa, $default-branch]
  pull_request:
    branches: [dev, develop, qa, $default-branch]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Get Event Data
        run: |
          echo "Event type: ${{ github.event_name }}"
          if [[ ${{ github.event_name }} == "pull_request" ]] 
          then
            echo "Source Branch: ${{ github.head_ref }}"
            echo "Target Branch: ${{ github.base_ref }}"
          else
            echo "Triggered by branch/tag: ${{ github.ref }}"
          fi
          echo "Commit Sha: ${{ github.sha }}"
          echo "Event Actor: ${{ github.actor }}"

      - name: Abort Previous Builds
        uses: potiuk/cancel-workflow-runs@v4_8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          cancelMode: duplicates

  build_and_test:
    name: Build, Lint and Test
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 15
    strategy:
      matrix:
        directory:
          - './folder1'
          - './folder2'
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_DOCKERFILE: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vulnerability_check:
    name: Snyk Vulnerability Check
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Check Open Source Dependency Security
        # Snyk can be used to break the build when it detects vulnerabilities.
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          # Specify severity threshold and flag to also check dev dependencies
          args: --severity-threshold=high --dev
          # To see results and fail build on failure, command should be test
          command: test
          json: true

      - name: Upload Snyk Results
        uses: actions/upload-artifact@v2
        with:
          name: Snyk-results-summary
          path: snyk.json

